
import Upp~Type_Handle
import Upp~i64

Filter :: struct ($T: Type_Handle)
	check: (a: T) -> bool

is_even :: (a: int) -> bool
	return a % 2 == 0

INT_FILTER :: Filter(int).{check = is_even}

Foo :: struct (F: Filter($T))
	padding: i64
	value: T

check_filter :: (a: Foo($F)) -> bool
	x: F.T = a.value
	y: a.T = a.value * 2
	return F.check(a.value)
	
main :: ()
	x: Foo(INT_FILTER)
	x.value = 12
	
	b1 := check_filter(x)
	x.value = 13
	b2 := check_filter(x)
	
	assert(b1 == true)
	assert(b2 == false)
	
