import Upp~c_string

Player :: struct
	name: c_string
	level: int
	alive: bool

init_fn :: () => int
	return 15 + 20 * 2

///
	In Theory the global initialization order is determined by the way
	in which they reference each other,but it may currently be the case
	that this does not work correctly
global_x: int
global_y: int = 5
global_w := init_fn()
global_player: Player
global_pointer: *int

main :: ()
	// Test globals
	global_x = 15 + global_y
	assert(global_x == 20)
	assert(global_w == 55)
	
	global_player.name = "Fred"
	global_player.level = 15
	global_player.alive = true
	assert(global_player.level == 15)
	assert(global_player.alive == true)
	
	// Test pointers to globals
	ptr :=* global_x
	&ptr = 30
	assert(global_x == 30)
	global_pointer =* ptr
	&global_pointer = 15
	assert(&ptr == 15)
