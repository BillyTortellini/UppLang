main :: () -> void
{
    x := true;
    y := x * x;
    return x;
}

/*  
    Next Features:
     * If else structures
     * Loops (Probably lots of errors)
     * Function calls
     * Semantic analysis
     * Bytecode creator + interpreter
     * Pointers
     * Structs
     * OS-Calls/Calls to libraries (print, new/delete)

    Current UppLang features:
     * Expression parsing + evaluation
     * Variable definition/assignment + return

    Nice-to-have Features:
     * Log to window, not to console, maybe something like in a textfield
        -> Would be best with a toast like notification, and something you can focus
     * Work on GUI (Probably necessary for better debugging)

    Questions about Design:
     * Primitive datatypes as keywords (Lexer stuff)?
        -> Seems to simplify a lot of stuff

    Editor-Bugs:
     * Repeat last search does not differentiate 'f'/'t'/forward backward
     * 'r' is buggy on line end, and on empty lines
     * Undo-Redo cursor position still sucks a little (Hint: Save positions after/before command)
     * Non ASCII chars destroy some motions (Program crashes)
     * Alt-Gr spamming still cancels commands (win32 nonsense)

    Editor features missing:
     * Undo/Redo Tree History
     * Visual Mode
     * Visual Block/Multi-Cursor stuff
     * Command recording (@ stuff with vim, altough this could maybe be done better)
*/
