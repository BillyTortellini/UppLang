fibonnaci_rec :: (n:int) -> int
{
    if (n == 0) return 1;
    if (n == 1) return 2;
    else return fibonnaci_rec(n-1) +
                fibonnaci_rec(n-2);
}

main :: () -> void
{
    // Next up: Debug fibonacci function call, something with symbols
    x := fibonnaci_rec(3);
    return x;
}

/*  
    Missing binary statements x++; x--; x+=1; x-=1; x/=1; x*=1;
    Short circuit operation on &&

    // TODO: Check why the program eats 160 MB ram at runtime

    Next Features:
     * Function calls
     * Semantic analysis
     * Bytecode creator + interpreter
     * Pointers + Arrays
     * Structs
     * OS-Calls/Calls to libraries (print, new/delete)

    Current UppLang features:
     * Expression parsing + evaluation
     * Variable definition/assignment + return
     * Primitive Type System (Int bool float)
     * Scopes
     * If-Else Flow control
     * While loop with break continue

    Nice-to-have Features:
     * Log to window, not to console, maybe something like in a textfield
        -> Would be best with a toast like notification, and something you can focus
     * Work on GUI (Probably necessary for better debugging)

    Editor-Bugs:
     * Repeat last search does not differentiate 'f'/'t'/forward backward
     * 'r' is buggy on line end, and on empty lines
     * Undo-Redo cursor position still sucks a little (Hint: Save positions after/before command)
     * Non ASCII chars destroy some motions (Program crashes)
     * Alt-Gr spamming still cancels commands (win32 nonsense)
     * % does not jump on empty parenthesis () {}
     * O does not work on first line

    Editor features missing:
     * Undo/Redo Tree History
     * Visual Mode
     * Visual Block/Multi-Cursor stuff
     * Command recording (@ stuff with vim, altough this could maybe be done better)
*/