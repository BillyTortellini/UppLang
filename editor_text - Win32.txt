/*
main :: ()
{
    xy := 15;
    
    if xy % 2 == 0 {
        print_string("EVEN");
    }
    else {
        print_string("ODD");
    }
}
*/

extern hello_world :: () -> void;

module Win32
{
    extern "Windows.h" 
    {
        CreateWindowExA 
        GetModuleHandleA 
        RegisterClassA 
        DefWindowProcA
        GetLastError
        FormatMessageA
        LocalFree 
        memset
    }
    extern "cstdio"{}
    extern "cstring"{strlen}
    extern lib "user32.lib";
}

cstr :: (str: String) -> *i8
{
    return cast<*i8>(str.character_buffer.data);
}

test :: () -> void {}

cstr_to_str :: (cstr: *i8) -> String
{
    str: String;
    str.character_buffer.data = cast<*byte> cstr;
    str.character_buffer.size = 0;
    str.size = cast<i32>Win32::strlen(cstr);
    return str;
}

print_last_error :: ()
{
    msg_buffer: [2048]i8;
    Win32::memset(msg_buffer.data, cast<i32>2048, cast<u32>0);
    error_code := Win32::GetLastError();
    if error_code == cast<u32>0 {
        print_string("No error recorded");
        return;
    }
    flags := 0x100;
    Win32::FormatMessageA(
        cast<u32>0x1200, //Allocate buffer
        nullptr, error_code, 
        cast<u32>0, 
        msg_buffer.data, 
        cast<u32>2048, nullptr
    );
    print_string("Last error: ");
    print_string(cstr_to_str(msg_buffer.data));
    print_string("\n");
    //Win32::LocalFree(msg_buffer);
}

main :: ()
{
    instance_handle := Win32::GetModuleHandleA(nullptr);
    if (instance_handle == nullptr) {
        print_string("Instance handle was 0");
        return;
    }
    
    CS_OWNDC   := cast<u32> 0x0001;
    CS_HREDRAW := cast<u32> 0x0002;
    CS_VREDRAW := cast<u32> 0x0020;
    class_name := cstr("UppClass");
    
    window_class: Win32::WNDCLASS;
    //Win32::memset(*window_class, cast<u32>size, 0);
    window_class.style = cast<u32>0x001;
    window_class.lpfnWndProc = *Win32::DefWindowProcA;
    window_class.lpszClassName = class_name;
    window_class.hCursor = nullptr;
    window_class.hInstance = instance_handle;
    window_class.cbClsExtra = 0;
    window_class.cbWndExtra = 0;
    window_class.hIcon = nullptr;
    window_class.hbrBackground = nullptr;
    window_class.lpszMenuName = nullptr;
    
    if Win32::RegisterClassA(*window_class) == cast<u32>0 
    {
        print_string("Register Class failed!\n");
        print_last_error();
        return;
    }
    print_string("Register Class success!\n");
    
    window_handle := Win32::CreateWindowExA(
        cast<u32>0, class_name, cstr("WndName"), cast<u32>0,
        0, 0, 800, 600,
        nullptr, nullptr, nullptr, nullptr 
    );
    if (window_handle != nullptr) {
        print_string("Window creation success\n");
    }
}

